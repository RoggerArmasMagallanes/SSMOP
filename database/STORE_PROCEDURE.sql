USE SYSMDPN;

# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA SOLICITUD
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA SOLICITUD
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_SOLICITUD
(
    IN _ID_REPRESENTANTE	INT,
	IN _FECHA_ING			DATE,
    IN _SERIE_SOL			CHAR(10),
    IN _CONTEXTO_SOL		TEXT,
    IN _ID_TIPO				INT
)
BEGIN
	INSERT INTO SOLICITUD (ID_REPRESENTANTE, FECHA_ING, SERIE_SOL, CONTEXTO_SOL, ID_TIPO, ESTADO) 
	VALUES (_ID_REPRESENTANTE, _FECHA_ING, _SERIE_SOL, _CONTEXTO_SOL, _ID_TIPO, '1');
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_SOLICITUD
(
    IN _ID_SOLICITUD		INT,
    IN _ID_REPRESENTANTE	INT,
	IN _FECHA_ING			DATE,
    IN _SERIE_SOL			CHAR(10),
    IN _CONTEXTO_SOL		TEXT,
    IN _ID_TIPO				INT
)
BEGIN
	UPDATE SOLICITUD SET ID_REPRESENTANTE = _ID_REPRESENTANTE,
                         FECHA_ING = _FECHA_ING,
                         SERIE_SOL = _SERIE_SOL,
                         CONTEXTO_SOL = _CONTEXTO_SOL,
                         ID_TIPO = _ID_TIPO,
                         ESTADO = '1'
	WHERE ID_SOLICITUD = _ID_SOLICITUD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_SOLICITUD
(
	IN _ID_SOLICITUD INT
)
BEGIN
	UPDATE SOLICITUD SET ESTADO = '0'
	WHERE ID_SOLICITUD = _ID_SOLICITUD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ALTA_SOLICITUD
(
	IN _ID_SOLICITUD INT
)
BEGIN
	UPDATE SOLICITUD SET ESTADO = '1'
	WHERE ID_SOLICITUD = _ID_SOLICITUD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_SOLICITUDES
(
)
BEGIN
	SELECT S.ID_SOLICITUD, R.ID_REPRESENTANTE, P.N_DNI, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) 'PERSONAS', 
		   E.RAZON_SOCIAL, E.N_RUC, R.CARGO_ENTIDAD, S.FECHA_ING, S.SERIE_SOL, S.CONTEXTO_SOL, T.DESCRIPCION  FROM SOLICITUD S
    INNER JOIN REPRESENTANTE R ON S.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
	INNER JOIN ENTIDAD E ON R.ID_ENTIDAD = E.ID_ENTIDAD
	INNER JOIN TIPO_SOLICITUD T ON S.ID_TIPO = T.ID_TIPO
	WHERE S.ESTADO = '1' 
    ORDER BY S.ID_SOLICITUD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_SOLICITUDES
(
	IN _ID_SOLICITUD INT
)
BEGIN
	SELECT S.ID_SOLICITUD, R.ID_REPRESENTANTE, P.N_DNI, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) 'PERSONAS', 
		   E.RAZON_SOCIAL, E.N_RUC, R.CARGO_ENTIDAD, S.FECHA_ING, S.SERIE_SOL, S.CONTEXTO_SOL, T.DESCRIPCION  FROM SOLICITUD S
    INNER JOIN REPRESENTANTE R ON S.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
	INNER JOIN ENTIDAD E ON R.ID_ENTIDAD = E.ID_ENTIDAD
	INNER JOIN TIPO_SOLICITUD T ON S.ID_TIPO = T.ID_TIPO
	WHERE S.ID_SOLICITUD =_ID_SOLICITUD AND S.ESTADO = '1' 
    ORDER BY S.ID_SOLICITUD;
END
$$
# FIN DEL PROCEDIMIENTO

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA TIPO SOLICITUD (SOLO PARA CARGAR SELECTS EN PHP)
DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_TIPOS
(
)
BEGIN
	SELECT ID_TIPO, DESCRIPCION FROM TIPO_SOLICITUD
    WHERE ESTADO = '1' ORDER BY DESCRIPCION;
END
$$
# FIN DEL PROCEDIMIENTO





# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA PERSONA
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA PERSONA
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_PERSONA
(
	IN _APE_PATERNO		VARCHAR(80),
	IN _APE_MATERNO		VARCHAR(80),
    IN _NOMBRES			VARCHAR(80),
    IN _N_DNI			CHAR(8),
    IN _GENERO			VARCHAR(10),
    IN _CORREO			VARCHAR(80),
    IN _FECHA_NAC		DATE,
    IN _TELEFONO		CHAR(9),
    IN _CELULAR			CHAR(9)
)
BEGIN
	INSERT INTO PERSONA (APE_PATERNO, APE_MATERNO, NOMBRES, N_DNI, GENERO, CORREO, FECHA_NAC, TELEFONO, CELULAR, ESTADO) 
	VALUES (_APE_PATERNO, _APE_MATERNO, _NOMBRES, _N_DNI, _GENERO, _CORREO, _FECHA_NAC, _TELEFONO, _CELULAR, '1');
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_PERSONA
(
    IN _ID_PERSONA		INT,
    IN _APE_PATERNO		VARCHAR(80),
	IN _APE_MATERNO		VARCHAR(80),
    IN _NOMBRES			VARCHAR(80),
    IN _N_DNI			CHAR(8),
    IN _GENERO			VARCHAR(10),
    IN _CORREO			VARCHAR(80),
    IN _FECHA_NAC		DATE,
    IN _TELEFONO		CHAR(9),
    IN _CELULAR			CHAR(9)
)
BEGIN
	UPDATE PERSONA SET APE_PATERNO = _APE_PATERNO,
						 APE_MATERNO = _APE_MATERNO,
                         NOMBRES = _NOMBRES,
                         N_DNI = _N_DNI,
                         GENERO = _GENERO,
                         CORREO = _CORREO,
                         FECHA_NAC = _FECHA_NAC,
                         TELEFONO = _TELEFONO,
                         CELULAR = _CELULAR,
                         ESTADO = '1'
	WHERE ID_PERSONA = _ID_PERSONA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_PERSONA
(
	IN _ID_PERSONA INT
)
BEGIN
	UPDATE PERSONA SET ESTADO = '0'
	WHERE ID_PERSONA = _ID_PERSONA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ALTA_PERSONA
(
	IN _ID_PERSONA INT
)
BEGIN
	UPDATE PERSONA SET ESTADO = '1'
	WHERE ID_PERSONA = _ID_PERSONA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_PERSONA
(
)
BEGIN
	SELECT ID_PERSONA, CONCAT(APE_PATERNO, ' ', APE_MATERNO, ', ', NOMBRES) AS 'DATOS', N_DNI, GENERO, CORREO, FECHA_NAC, TELEFONO, CELULAR FROM PERSONA
	WHERE ESTADO = '1' 
    ORDER BY DATOS;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_PERSONA
(
	IN _ID_PERSONA INT
)
BEGIN
	SELECT ID_PERSONA, APE_PATERNO, APE_MATERNO, NOMBRES, N_DNI, GENERO, CORREO, FECHA_NAC, TELEFONO, CELULAR FROM PERSONA
	WHERE ID_PERSONA =_ID_PERSONA AND ESTADO = '1';
END
$$

-- PROCEDIMIENTO PARA CARGAR DATOS DE LA PERSONA EN EL SELECT PHP
DELIMITER $$
CREATE PROCEDURE PROC_CARGAR_PERSONA
(
)
BEGIN
	SELECT ID_PERSONA, CONCAT(N_DNI, ' - ', APE_PATERNO, ' ', APE_MATERNO, ', ', NOMBRES) AS DATOS FROM PERSONA
    WHERE ESTADO = '1' ORDER BY N_DNI;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_FILTRAR_PERSONA
(
	IN _N_DNI CHAR(8)
)
BEGIN
	SELECT ID_PERSONA, APE_PATERNO, APE_MATERNO, NOMBRES, N_DNI, GENERO, CORREO, FECHA_NAC, TELEFONO, CELULAR FROM PERSONA
    WHERE N_DNI LIKE CONCAT(_N_DNI,'%') AND ESTADO = '1'
    ORDER BY APE_PATERNO LIMIT 8;
END
$$
# FIN DE PROCEDIMIENTO ALMACENADO





# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA ENTIDAD
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA ENTIDAD
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_ENTIDAD
(
    IN _TIPO_ENTIDAD	VARCHAR(20),
    IN _RAZON_SOCIAL	TEXT,
    IN _N_RUC			VARCHAR(11),
    IN _TELEFONO		VARCHAR(9),
    IN _DIRECCION		TEXT,
    IN _CORREO			VARCHAR(80)
)
BEGIN
	INSERT INTO ENTIDAD (TIPO_ENTIDAD, RAZON_SOCIAL, N_RUC, TELEFONO, DIRECCION, CORREO, ESTADO) 
	VALUES (_TIPO_ENTIDAD, _RAZON_SOCIAL, _N_RUC, _TELEFONO, _DIRECCION, _CORREO, '1');
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_ENTIDAD
(
    IN _ID_ENTIDAD		INT,
    IN _TIPO_ENTIDAD	VARCHAR(20),
    IN _RAZON_SOCIAL	TEXT,
    IN _N_RUC			VARCHAR(11),
    IN _TELEFONO		VARCHAR(9),
    IN _DIRECCION		TEXT,
    IN _CORREO			VARCHAR(80)
)
BEGIN
	UPDATE ENTIDAD SET TIPO_ENTIDAD = _TIPO_ENTIDAD,
						 RAZON_SOCIAL = _RAZON_SOCIAL,
                         N_RUC = _N_RUC,
                         TELEFONO = _TELEFONO,
                         DIRECCION = _DIRECCION,
                         CORREO = _CORREO,
                         ESTADO = '1'
	WHERE ID_ENTIDAD = _ID_ENTIDAD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_ENTIDAD
(
	IN _ID_ENTIDAD INT
)
BEGIN
	UPDATE ENTIDAD SET ESTADO = '0'
	WHERE ID_ENTIDAD = _ID_ENTIDAD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ALTA_ENTIDAD
(
	IN _ID_ENTIDAD INT
)
BEGIN
	UPDATE ENTIDAD SET ESTADO = '1'
	WHERE ID_ENTIDAD = _ID_ENTIDAD;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_ENTIDAD
(
)
BEGIN
	SELECT ID_ENTIDAD, TIPO_ENTIDAD, RAZON_SOCIAL, N_RUC, TELEFONO, DIRECCION, CORREO FROM ENTIDAD
	WHERE ESTADO = '1' 
    ORDER BY RAZON_SOCIAL;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_ENTIDAD
(
	IN _ID_ENTIDAD INT
)
BEGIN
	SELECT ID_ENTIDAD, TIPO_ENTIDAD, RAZON_SOCIAL, N_RUC, TELEFONO, DIRECCION, CORREO FROM ENTIDAD
	WHERE ID_ENTIDAD =_ID_ENTIDAD AND ESTADO = '1' ;
END
$$

-- PROCEDIMIENTO PARA CARGAR SELECT PHP
DELIMITER $$
CREATE PROCEDURE PROC_CARGAR_ENTIDAD
(
)
BEGIN
	SELECT ID_ENTIDAD, CONCAT(N_RUC,' - ',RAZON_SOCIAL) AS EMPRESA FROM ENTIDAD
    WHERE ESTADO = '1' ORDER BY N_RUC;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_FILTRAJE_ENTIDAD
(
	IN _OPCION 		 VARCHAR(1),
	IN _CRITERIO	 TEXT
)
BEGIN
		IF _OPCION = '1' THEN
          	SELECT ID_ENTIDAD, TIPO_ENTIDAD, RAZON_SOCIAL, N_RUC, TELEFONO, DIRECCION, CORREO FROM ENTIDAD
			WHERE RAZON_SOCIAL LIKE CONCAT(_CRITERIO,'%') AND ESTADO = '1' ;
		END IF;
          
		IF _OPCION = '2' THEN
          	SELECT ID_ENTIDAD, TIPO_ENTIDAD, RAZON_SOCIAL, N_RUC, TELEFONO, DIRECCION, CORREO FROM ENTIDAD
			WHERE N_RUC LIKE CONCAT(_CRITERIO,'%') AND ESTADO = '1' ;
		END IF;
END
$$

# FIN DE PROCEDIMIENTO ALMACENADOS ENTIDAD





# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA USUARIO
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA USUARIO
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_USUARIO
(	
	IN _ID_PERSONA		INT,
    IN _ID_CARGO		INT,
    IN _NOMBRE_USUARIO	VARCHAR(50),
    IN _CLAVE_USUARIO	VARCHAR(20)
)
BEGIN
	INSERT INTO USUARIO (ID_PERSONA, ID_CARGO, NOMBRE_USUARIO, CLAVE_USUARIO, ESTADO) 
	VALUES (_ID_PERSONA, _ID_CARGO, _NOMBRE_USUARIO, _CLAVE_USUARIO, '1');
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_USUARIO
(
	IN _ID_USUARIO		INT,
    IN _ID_PERSONA		INT,
    IN _ID_CARGO		INT,
    IN _NOMBRE_USUARIO	VARCHAR(50),
    IN _CLAVE_USUARIO	VARCHAR(20)
)
BEGIN
	UPDATE USUARIO SET ID_PERSONA = _ID_PERSONA,
						 ID_CARGO = _ID_CARGO,
						 NOMBRE_USUARIO = _NOMBRE_USUARIO,
                         CLAVE_USUARIO = _CLAVE_USUARIO,
                         ESTADO = '1'
	WHERE ID_USUARIO = _ID_USUARIO;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_USUARIO
(
	IN _ID_USUARIO INT
)
BEGIN
	UPDATE USUARIO SET ESTADO = '0'
	WHERE ID_USUARIO = _ID_USUARIO;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ALTA_USUARIO
(
	IN _ID_USUARIO INT
)
BEGIN
	UPDATE USUARIO SET ESTADO = '1'
	WHERE ID_USUARIO = _ID_USUARIO;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_USUARIO
(
)
BEGIN
	SELECT U.ID_USUARIO, CONCAT(P.APE_PATERNO, ' ', P.APE_MATERNO, ', ', P.NOMBRES) AS DATOS, U.NOMBRE_USUARIO, U.CLAVE_USUARIO, C.DESCRIPCION, U.ESTADO, P.ID_PERSONA FROM USUARIO U
	INNER JOIN PERSONA P ON U.ID_PERSONA = P.ID_PERSONA
	INNER JOIN CARGO C ON U.ID_CARGO = C.ID_CARGO
	WHERE U.ESTADO = '1';
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_USUARIO
(
	IN _ID_USUARIO INT
)
BEGIN
	SELECT U.ID_USUARIO, CONCAT(P.APE_PATERNO, ' ', P.APE_MATERNO, ', ', P.NOMBRES) AS DATOS, U.NOMBRE_USUARIO, U.CLAVE_USUARIO, C.DESCRIPCION, U.ESTADO,  P.ID_PERSONA FROM USUARIO U
	INNER JOIN PERSONA P ON U.ID_PERSONA = P.ID_PERSONA
	INNER JOIN CARGO C ON U.ID_CARGO = C.ID_CARGO
	WHERE U.ID_USUARIO =_ID_USUARIO AND U.ESTADO = '1';
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_VALIDAR_USUARIO
(
	IN _NOMBRE_USUARIO VARCHAR(50),
	IN _CLAVE_USUARIO VARCHAR(20),
    IN _ID_CARGO INT
)
BEGIN
	SELECT U.ID_USUARIO, CONCAT(P.APE_PATERNO, ' ', P.APE_MATERNO, ', ', P.NOMBRES) AS DATOS, U.NOMBRE_USUARIO, U.CLAVE_USUARIO, C.ID_CARGO, C.DESCRIPCION, U.ESTADO,  P.ID_PERSONA FROM USUARIO U
	INNER JOIN PERSONA P ON U.ID_PERSONA = P.ID_PERSONA
	INNER JOIN CARGO C ON U.ID_CARGO = C.ID_CARGO
	WHERE U.NOMBRE_USUARIO =_NOMBRE_USUARIO AND U.CLAVE_USUARIO = _CLAVE_USUARIO AND C.ID_CARGO=_ID_CARGO  AND U.ESTADO = '1';
END
$$

# FIN DEL PROCEDIMIENTO ALMACENADO

# PROCEDIMIENTO PARA CARGAR CARGOS EN EL SELECT PHP
DELIMITER $$
CREATE PROCEDURE PROC_CARGAR_CARGO
(
)
BEGIN
	SELECT ID_CARGO, DESCRIPCION FROM CARGO
    WHERE ESTADO = '1' ORDER BY DESCRIPCION;
END
$$

# PROCEDIMIENTO PARA CARGAR MODALIDES EN EL SELECT PHP
DELIMITER $$
CREATE PROCEDURE PROC_CARGAR_MODALIDAD
(
)
BEGIN
	SELECT ID_MODALIDAD, DESCRIPCION FROM MODALIDAD
    WHERE ESTADO = '1' ORDER BY DESCRIPCION;
END
$$

# PROCEDIMIENTO PARA CARGAR USUARIO EN EL SELECT PHP
DELIMITER $$
CREATE PROCEDURE PROC_CARGAR_USUARIO
(
)
BEGIN
	SELECT U.ID_USUARIO, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO,', ',P.NOMBRES) AS FUNCIONARIO FROM USUARIO U
    INNER JOIN PERSONA P ON U.ID_PERSONA = P.ID_PERSONA
    WHERE U.ESTADO = '1' ORDER BY FUNCIONARIO;
END
$$
# FIN DE LOS PROCEDIMIENTOS





# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA EXPEDIENTE
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA EXPEDIENTE

select * from expediente;
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_EXPEDIENTE
(
    IN _ID_MODALIDAD		INT,
    IN _ID_REPRESENTANTE	INT,
    IN _ID_USUARIO			INT,
    IN _N_EXPEDIENTE		TEXT,
    IN _CONTEXTO			TEXT, 
    IN _FECHA_APROBADO		DATE,
    IN _MONTO_APROBADO		DECIMAL(10,2),
    IN _OBSERVACION			TEXT,
    IN _SUMILLA				VARCHAR(80),
    IN _UBICACION			VARCHAR(80),
    IN _MOTIVO				VARCHAR(80),
    IN _ESTADO				CHAR(1)
)
BEGIN
	INSERT INTO EXPEDIENTE (ID_MODALIDAD, ID_REPRESENTANTE, ID_USUARIO, N_EXPEDIENTE, CONTEXTO, FECHA_APROBADO,
							MONTO_APROBADO, OBSERVACION, SUMILLA, UBICACION, MOTIVO, ESTADO) 
	VALUES (_ID_MODALIDAD, _ID_REPRESENTANTE, _ID_USUARIO, _N_EXPEDIENTE, _CONTEXTO, _FECHA_APROBADO,
			_MONTO_APROBADO, _OBSERVACION, _SUMILLA, _UBICACION, _MOTIVO, _ESTADO);
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_EXPEDIENTE
(
    IN _ID_EXPEDIENTE		INT,
    IN _ID_MODALIDAD		INT,
    IN _ID_REPRESENTANTE	INT,
    IN _ID_USUARIO			INT,
    IN _N_EXPEDIENTE		TEXT,
    IN _CONTEXTO			TEXT, 
    IN _FECHA_APROBADO		DATE,
    IN _MONTO_APROBADO		DECIMAL(10,2),
    IN _OBSERVACION			TEXT,
    IN _SUMILLA				VARCHAR(80),
    IN _UBICACION			VARCHAR(80),
    IN _MOTIVO				VARCHAR(80),
    IN _ESTADO				CHAR(1)
)
BEGIN
	UPDATE EXPEDIENTE SET ID_MODALIDAD = _ID_MODALIDAD,
						 ID_REPRESENTANTE = _ID_REPRESENTANTE,
                         ID_USUARIO = _ID_USUARIO,
                         N_EXPEDIENTE = _N_EXPEDIENTE,
                         CONTEXTO = _CONTEXTO,
                         FECHA_APROBADO = _FECHA_APROBADO,
                         MONTO_APROBADO = _MONTO_APROBADO,
                         OBSERVACION = _OBSERVACION,
                         SUMILLA = _SUMILLA,
                         UBICACION = _UBICACION,
                         MOTIVO = _MOTIVO,
                         ESTADO = _ESTADO
	WHERE ID_EXPEDIENTE = _ID_EXPEDIENTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_EXPEDIENTE
(
	IN _ID_EXPEDIENTE INT
)
BEGIN
	UPDATE EXPEDIENTE SET ESTADO = '0'
	WHERE ID_EXPEDIENTE = _ID_EXPEDIENTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ALTA_EXPEDIENTE
(
	IN _ID_EXPEDIENTE INT
)
BEGIN
	UPDATE EXPEDIENTE SET ESTADO = '1'
	WHERE ID_EXPEDIENTE = _ID_EXPEDIENTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_EXPEDIENTE
(
)
BEGIN
	SELECT E.ID_EXPEDIENTE, M.DESCRIPCION, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS 'REPRESENTANTE',
			CONCAT(PP.APE_PATERNO, ' ',PP.APE_MATERNO, ', ',PP.NOMBRES) AS 'USUARIO', E.N_EXPEDIENTE,
            E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, E.OBSERVACION, E.SUMILLA, E.UBICACION, E.MOTIVO, E.ESTADO FROM EXPEDIENTE E
    INNER JOIN MODALIDAD M ON E.ID_MODALIDAD = M.ID_MODALIDAD
    INNER JOIN REPRESENTANTE R ON E.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN USUARIO U ON E.ID_USUARIO = U.ID_USUARIO
    INNER JOIN PERSONA PP ON U.ID_PERSONA = PP.ID_PERSONA
    WHERE E.ESTADO = '1' 
    ORDER BY E.FECHA_APROBADO;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_EXPEDIENTE
(
	IN _ID_EXPEDIENTE INT
)
BEGIN
	SELECT E.ID_EXPEDIENTE, M.DESCRIPCION, R.ID_REPRESENTANTE, P.N_DNI, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS 'REPRESENTANTE', EE.RAZON_SOCIAL, EE.N_RUC, R.CARGO_ENTIDAD,
			CONCAT(PP.APE_PATERNO, ' ',PP.APE_MATERNO, ', ',PP.NOMBRES) AS 'USUARIO', E.N_EXPEDIENTE,
            E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, E.OBSERVACION, E.SUMILLA, E.UBICACION, E.MOTIVO, E.ESTADO FROM EXPEDIENTE E
    INNER JOIN MODALIDAD M ON E.ID_MODALIDAD = M.ID_MODALIDAD
    INNER JOIN REPRESENTANTE R ON E.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN ENTIDAD EE ON R.ID_ENTIDAD = EE.ID_ENTIDAD
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN USUARIO U ON E.ID_USUARIO = U.ID_USUARIO
    INNER JOIN PERSONA PP ON U.ID_PERSONA = PP.ID_PERSONA
    WHERE E.ID_EXPEDIENTE = _ID_EXPEDIENTE AND E.ESTADO = '1' 
    ORDER BY E.FECHA_APROBADO;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSQUEDA_EXPEDIENTE
(
	IN _N_EXPEDIENTE TEXT
)
BEGIN 
	SELECT E.ID_EXPEDIENTE, M.DESCRIPCION, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS 'REPRESENTANTE',
			CONCAT(PP.APE_PATERNO, ' ',PP.APE_MATERNO, ', ',PP.NOMBRES) AS 'USUARIO', E.N_EXPEDIENTE,
            E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, E.OBSERVACION, E.SUMILLA, E.UBICACION, E.MOTIVO, E.ESTADO FROM EXPEDIENTE E
    INNER JOIN MODALIDAD M ON E.ID_MODALIDAD = M.ID_MODALIDAD
    INNER JOIN REPRESENTANTE R ON E.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN USUARIO U ON E.ID_USUARIO = U.ID_USUARIO
    INNER JOIN PERSONA PP ON U.ID_PERSONA = PP.ID_PERSONA
    WHERE E.N_EXPEDIENTE = _N_EXPEDIENTE AND E.ESTADO = '1';
END
$$

# FIN DE PROCEDIMIENTO

DELIMITER $$
CREATE PROCEDURE PROC_FILTRAR_REPRESENTANTE
(
    IN _N_DNI	CHAR(8)
)
BEGIN 
	SELECT R.ID_REPRESENTANTE, P.N_DNI, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS DATOS, 
		   E.RAZON_SOCIAL, E.N_RUC, R.CARGO_ENTIDAD FROM REPRESENTANTE R
	INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
	INNER JOIN ENTIDAD E ON R.ID_ENTIDAD = E.ID_ENTIDAD
	WHERE P.N_DNI LIKE CONCAT('%',_N_DNI,'%') AND R.ESTADO = '1'
    ORDER BY E.RAZON_SOCIAL LIMIT 8;
END
$$


# PROCEDIMIENTO ALMACENADO PARA BUSCAR POR RANGO DE FECHAS
DELIMITER $$
CREATE PROCEDURE PROC_RANGO_EXPEDIENTE
(
	IN _FECHA_ING   DATE,
    IN _FECHA_FIN	DATE
)
BEGIN
          	SELECT E.ID_EXPEDIENTE, M.DESCRIPCION, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS 'REPRESENTANTE',
			CONCAT(PP.APE_PATERNO, ' ',PP.APE_MATERNO, ', ',PP.NOMBRES) AS 'USUARIO', E.N_EXPEDIENTE,
            E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, E.OBSERVACION, E.SUMILLA, E.UBICACION, E.PASES, E.MOTIVO, E.ESTADO FROM EXPEDIENTE E
			INNER JOIN MODALIDAD M ON E.ID_MODALIDAD = M.ID_MODALIDAD
			INNER JOIN REPRESENTANTE R ON E.ID_REPRESENTANTE = R.ID_REPRESENTANTE
			INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
			INNER JOIN USUARIO U ON E.ID_USUARIO = U.ID_USUARIO
			INNER JOIN PERSONA PP ON U.ID_PERSONA = PP.ID_PERSONA
            WHERE DATE(E.FECHA_APROBADO) BETWEEN _FECHA_ING AND _FECHA_FIN
			AND E.ESTADO = '1' OR E.ESTADO ='2' OR E.ESTADO='3'
            ORDER BY E.ID_EXPEDIENTE;
END
$$

CALL PROC_RANGO_EXPEDIENTE('2017-01-01','2017-08-30');

/*
DELIMITER $$
CREATE PROCEDURE PROC_BUSQUEDA_EXPEDIENTE
(
    IN _N_EXPEDIENTE	TEXT
)
BEGIN 
	SELECT ID_EXPEDIENTE, N_EXPEDIENTE, CONTEXTO, FECHA_APROBADO, MONTO_APROBADO FROM EXPEDIENTE
    WHERE N_EXPEDIENTE LIKE CONCAT('%',_N_EXPEDIENTE,'%') AND ESTADO = '1'
    ORDER BY N_EXPEDIENTE LIMIT 8;
END
$$
*/




# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA OBRA
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA OBRA
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_OBRA
(
    IN _ID_EXPEDIENTE		INT,
    IN _NOMBRE_OBRA			TEXT,
    IN _FECHA_INICIO		DATE,
    IN _FECHA_FIN			DATE,
    IN _TOTAL_DIAS			INT,
    IN _MONTO_APTO			DECIMAL(10,2),
    IN _FINANCIA_UNO		CHAR(1),
    IN _FINANCIA_DOS		CHAR(1),
    IN _ID_TIPO_EJECUCION	INT
)
BEGIN
	INSERT INTO OBRA (ID_EXPEDIENTE, NOMBRE_OBRA, FECHA_INICIO, FECHA_FIN, TOTAL_DIAS, MONTO_APTO, FINANCIA_UNO, FINANCIA_DOS, ID_TIPO_EJECUCION, ESTADO) 
	VALUES (_ID_EXPEDIENTE, _NOMBRE_OBRA, _FECHA_INICIO, _FECHA_FIN, _TOTAL_DIAS, _MONTO_APTO, _FINANCIA_UNO, _FINANCIA_DOS, _ID_TIPO_EJECUCION, '1');
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_OBRA
(
    IN _ID_OBRA				INT,
    IN _ID_EXPEDIENTE		INT,
    IN _NOMBRE_OBRA			TEXT,
    IN _FECHA_INICIO		DATE,
    IN _FECHA_FIN			DATE,
    IN _TOTAL_DIAS			INT,
    IN _MONTO_APTO			DECIMAL(10,2),
    IN _FINANCIA_UNO		CHAR(1),
    IN _FINANCIA_DOS		CHAR(1),
    IN _ID_TIPO_EJECUCION	INT
)
BEGIN
	UPDATE OBRA SET ID_EXPEDIENTE = _ID_EXPEDIENTE,
                         NOMBRE_OBRA = _NOMBRE_OBRA,
                         FECHA_INICIO = _FECHA_INICIO,
                         FECHA_FIN = _FECHA_FIN,
                         TOTAL_DIAS = _TOTAL_DIAS,
                         MONTO_APTO = _MONTO_APTO,
                         FINANCIA_UNO = _FINANCIA_UNO,
                         FINANCIA_DOS = _FINANCIA_DOS,
                         ID_TIPO_EJECUCION = _ID_TIPO_EJECUCION,
                         ESTADO = '1'
	WHERE ID_OBRA = _ID_OBRA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_OBRA
(
	IN _ID_OBRA INT
)
BEGIN
	UPDATE OBRA SET ESTADO = '0'
	WHERE ID_OBRA = _ID_OBRA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ALTA_OBRA
(
	IN _ID_OBRA INT
)
BEGIN
	UPDATE OBRA SET ESTADO = '1'
	WHERE ID_OBRA = _ID_OBRA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_OBRA
(
)
BEGIN
	SELECT O.ID_OBRA, E.ID_EXPEDIENTE, E.N_EXPEDIENTE, E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, O.NOMBRE_OBRA, O.FECHA_INICIO, O.FECHA_FIN, 
		   O.TOTAL_DIAS, O.MONTO_APTO, O.FINANCIA_UNO, O.FINANCIA_DOS, TE.DESCRIPCION 
	FROM OBRA O
    INNER JOIN EXPEDIENTE E ON O.ID_EXPEDIENTE = E.ID_EXPEDIENTE
    INNER JOIN TIPO_EJECUCION TE ON O.ID_TIPO_EJECUCION = TE.ID_TIPO_EJECUCION
	WHERE O.ESTADO = '1' 
    ORDER BY O.FECHA_INICIO;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_OBRA
(
	IN _ID_OBRA INT
)
BEGIN
	SELECT O.ID_OBRA, E.ID_EXPEDIENTE, E.N_EXPEDIENTE, E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, O.NOMBRE_OBRA, O.FECHA_INICIO, O.FECHA_FIN, 
		   O.TOTAL_DIAS, O.MONTO_APTO, O.FINANCIA_UNO, O.FINANCIA_DOS, TE.DESCRIPCION 
	FROM OBRA O
    INNER JOIN EXPEDIENTE E ON O.ID_EXPEDIENTE = E.ID_EXPEDIENTE
    INNER JOIN TIPO_EJECUCION TE ON O.ID_TIPO_EJECUCION = TE.ID_TIPO_EJECUCION
	WHERE ID_OBRA = _ID_OBRA AND O.ESTADO = '1' 
    ORDER BY O.FECHA_INICIO;
END
$$
# FIN DEL PROCEDIMIENTO

DELIMITER $$
CREATE PROCEDURE PROC_FILTRAR_EXPEDIENTE
(
    IN _N_EXPEDIENTE	TEXT
)
BEGIN 
	SELECT ID_EXPEDIENTE, N_EXPEDIENTE, CONTEXTO, FECHA_APROBADO, MONTO_APROBADO FROM EXPEDIENTE
    WHERE N_EXPEDIENTE LIKE CONCAT('%',_N_EXPEDIENTE,'%') AND ESTADO = '1'
    ORDER BY N_EXPEDIENTE LIMIT 8;
END
$$

# PROCEDIMIENTO PARA CARGAR USUARIO EN EL SELECT PHP
DELIMITER $$
CREATE PROCEDURE PROC_CARGAR_TIPOEJECUCION
(
)
BEGIN
	SELECT ID_TIPO_EJECUCION, DESCRIPCION FROM TIPO_EJECUCION
    WHERE ESTADO = '1' ORDER BY DESCRIPCION;
END
$$

CALL PROC_LISTAR_USUARIO();


# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA REPRESENTANTE
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA REPRSENTANTE
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_REPRESENTANTE
(
    IN _ID_PERSONA			INT,
	IN _ID_ENTIDAD			INT,
    IN _CARGO_ENTIDAD		VARCHAR(80),
    IN _NACIONALIDAD		TEXT
)
BEGIN
	INSERT INTO REPRESENTANTE (ID_PERSONA, ID_ENTIDAD, CARGO_ENTIDAD, NACIONALIDAD, ESTADO) 
	VALUES (_ID_PERSONA, _ID_ENTIDAD, _CARGO_ENTIDAD, _NACIONALIDAD, '1');
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_REPRESENTANTE
(
    IN _ID_REPRESENTANTE	INT,
    IN _ID_PERSONA			INT,
	IN _ID_ENTIDAD			INT,
    IN _CARGO_ENTIDAD		VARCHAR(80),
    IN _NACIONALIDAD		TEXT
)
BEGIN
	UPDATE REPRESENTANTE SET ID_PERSONA = _ID_PERSONA,
							 ID_ENTIDAD = _ID_ENTIDAD,
							 CARGO_ENTIDAD = _CARGO_ENTIDAD,
							 NACIONALIDAD = _NACIONALIDAD,
							 ESTADO = '1'
	WHERE ID_REPRESENTANTE = _ID_REPRESENTANTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_REPRESENTANTE
(
	IN _ID_REPRESENTANTE INT
)
BEGIN
	UPDATE REPRESENTANTE SET ESTADO = '0'
	WHERE ID_REPRESENTANTE = _ID_REPRESENTANTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_REPRESENTANTE
(
)
BEGIN
	SELECT R.ID_REPRESENTANTE, P.ID_PERSONA, CONCAT(P.APE_PATERNO,'',P.APE_MATERNO,', ',P.NOMBRES) AS 'DATOS', P.N_DNI,
			E.ID_ENTIDAD, E.RAZON_SOCIAL, E.N_RUC, R.CARGO_ENTIDAD, R.NACIONALIDAD 
	FROM REPRESENTANTE R
	INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN ENTIDAD E ON R.ID_ENTIDAD = E.ID_ENTIDAD
	WHERE R.ESTADO = '1' 
    ORDER BY R.ID_REPRESENTANTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_REPRESENTANTE
(
	IN _ID_REPRESENTANTE INT
)
BEGIN
	SELECT R.ID_REPRESENTANTE, P.ID_PERSONA, CONCAT(P.APE_PATERNO,'',P.APE_MATERNO,', ',P.NOMBRES) AS 'DATOS', P.N_DNI,
			E.ID_ENTIDAD, E.RAZON_SOCIAL, E.N_RUC, R.CARGO_ENTIDAD, R.NACIONALIDAD 
	FROM REPRESENTANTE R
	INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN ENTIDAD E ON R.ID_ENTIDAD = E.ID_ENTIDAD
	WHERE R.ID_REPRESENTANTE =_ID_REPRESENTANTE AND R.ESTADO = '1' 
    ORDER BY R.ID_REPRESENTANTE;
END
$$


DELIMITER $$
CREATE PROCEDURE PROC_FILTRAR1_PERSONA
(
    IN _N_DNI	CHAR(8)
)
BEGIN
	SELECT ID_PERSONA, CONCAT(APE_PATERNO,' ',APE_MATERNO,', ',NOMBRES) AS DATOS, N_DNI FROM PERSONA
    WHERE N_DNI LIKE CONCAT('%',_N_DNI,'%') AND ESTADO = '1'
    ORDER BY APE_PATERNO LIMIT 8;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_FILTRAR2_EMPRESA
(
    IN _N_RUC	CHAR(11)
)
BEGIN
	SELECT ID_ENTIDAD, RAZON_SOCIAL, N_RUC FROM ENTIDAD
			WHERE N_RUC LIKE CONCAT('%',_N_RUC,'%') AND ESTADO = '1' 
    ORDER BY RAZON_SOCIAL LIMIT 8;
END
$$


# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA DETALLE_EXPEDIENTE
# **********************************************************************

# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA PERSONA
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_TRAZABILIDAD
(
	IN _ID_EXPEDIENTE		INT,
	IN _FECHA_DERIVACION	DATE,
    IN _AREA_COMPETENTE		VARCHAR(80),
    IN _FOLIOS				INT,
    IN _OBSERVACION			TEXT,
    IN _NUEVO_ESTADO		CHAR(1)
)
BEGIN
	INSERT INTO DETALLE_EXPEDIENTE (ID_EXPEDIENTE, FECHA_DERIVACION, AREA_COMPETENTE, FOLIOS, OBSERVACION, NUEVO_ESTADO) 
	VALUES (_ID_EXPEDIENTE, _FECHA_DERIVACION, _AREA_COMPETENTE, _FOLIOS, _OBSERVACION, _NUEVO_ESTADO);
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_TRAZABILIDAD
(
    IN _ID_DETEXPEDIENTE	INT,
    IN _ID_EXPEDIENTE		INT,
	IN _FECHA_DERIVACION	DATE,
    IN _AREA_COMPETENTE		VARCHAR(80),
    IN _FOLIOS				INT,
    IN _OBSERVACION			TEXT,
    IN _NUEVO_ESTADO		CHAR(1)
)
BEGIN
	UPDATE DETALLE_EXPEDIENTE SET ID_EXPEDIENTE = _ID_EXPEDIENTE,
								  FECHA_DERIVACION = _FECHA_DERIVACION,
							      AREA_COMPETENTE = _AREA_COMPETENTE,
								  FOLIOS = _FOLIOS,
							  	  OBSERVACION = _OBSERVACION,
								  NUEVO_ESTADO = _NUEVO_ESTADO
	WHERE ID_DETEXPEDIENTE = _ID_DETEXPEDIENTE;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_BAJA_TRAZABILIDAD
(
	IN _ID_DETEXPEDIENTE INT
)
BEGIN
	UPDATE DETALLE_EXPEDIENTE SET NUEVO_ESTADO = '0'
	WHERE ID_DETEXPEDIENTE = _ID_DETEXPEDIENTE;
END
$$


DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_TRAZABILIDAD
(
)
BEGIN
	SELECT DT.ID_DETEXPEDIENTE, E.ID_EXPEDIENTE, M.DESCRIPCION, R.ID_REPRESENTANTE, P.N_DNI, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS 'REPRESENTANTE', EE.RAZON_SOCIAL, EE.N_RUC, R.CARGO_ENTIDAD,
			CONCAT(PP.APE_PATERNO, ' ',PP.APE_MATERNO, ', ',PP.NOMBRES) AS 'USUARIO', E.N_EXPEDIENTE,
            E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, E.OBSERVACION, E.SUMILLA, E.UBICACION, E.MOTIVO,
            DT.FECHA_DERIVACION, DT.AREA_COMPETENTE, DT.FOLIOS, DT.OBSERVACION, DT.NUEVO_ESTADO
    FROM DETALLE_EXPEDIENTE DT
    
    INNER JOIN EXPEDIENTE E ON DT.ID_EXPEDIENTE = E.ID_EXPEDIENTE
	INNER JOIN MODALIDAD M ON E.ID_MODALIDAD = M.ID_MODALIDAD
    INNER JOIN REPRESENTANTE R ON E.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN ENTIDAD EE ON R.ID_ENTIDAD = EE.ID_ENTIDAD
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN USUARIO U ON E.ID_USUARIO = U.ID_USUARIO
    INNER JOIN PERSONA PP ON U.ID_PERSONA = PP.ID_PERSONA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_VER_TRAZABILIDAD
(
	IN _ID_EXPEDIENTE INT
)
BEGIN

	SELECT DT.ID_DETEXPEDIENTE, E.ID_EXPEDIENTE, M.DESCRIPCION, R.ID_REPRESENTANTE, P.N_DNI, CONCAT(P.APE_PATERNO, ' ',P.APE_MATERNO, ', ',P.NOMBRES) AS 'REPRESENTANTE', EE.RAZON_SOCIAL, EE.N_RUC, R.CARGO_ENTIDAD,
			CONCAT(PP.APE_PATERNO, ' ',PP.APE_MATERNO, ', ',PP.NOMBRES) AS 'USUARIO', E.N_EXPEDIENTE,
            E.CONTEXTO, E.FECHA_APROBADO, E.MONTO_APROBADO, E.OBSERVACION, E.SUMILLA, E.UBICACION, E.MOTIVO,
            DT.FECHA_DERIVACION, DT.AREA_COMPETENTE, DT.FOLIOS, DT.OBSERVACION, DT.NUEVO_ESTADO
    FROM DETALLE_EXPEDIENTE DT
    
    INNER JOIN EXPEDIENTE E ON DT.ID_EXPEDIENTE = E.ID_EXPEDIENTE
	INNER JOIN MODALIDAD M ON E.ID_MODALIDAD = M.ID_MODALIDAD
    INNER JOIN REPRESENTANTE R ON E.ID_REPRESENTANTE = R.ID_REPRESENTANTE
    INNER JOIN ENTIDAD EE ON R.ID_ENTIDAD = EE.ID_ENTIDAD
    INNER JOIN PERSONA P ON R.ID_PERSONA = P.ID_PERSONA
    INNER JOIN USUARIO U ON E.ID_USUARIO = U.ID_USUARIO
    INNER JOIN PERSONA PP ON U.ID_PERSONA = PP.ID_PERSONA
    WHERE DT.ID_EXPEDIENTE = _ID_EXPEDIENTE;
END
$$

CALL PROC_VER_TRAZABILIDAD('1');





# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA MOVIMIENTO OBRA
# **********************************************************************


# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA MOVIMIENTO OBRA
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_MOVIMIENTO
(	
	IN _ID_OBRA				INT,
	IN _NOTIFICACION		CHAR(1),
    IN _OBSERVACION			VARCHAR(80),
    IN _ESTADO_NOTIFICAR	CHAR(1),
    IN _TIPO				CHAR(1),
    IN _MOTIVO_SUPER		VARCHAR(80),
    IN _FECHA_INICIO		DATE,
    IN _FECHA_FIN			DATE,
    IN _OBSERVACION_GENERAL	TEXT
)
BEGIN
	INSERT INTO MOVIMIENTO_OBRA (ID_OBRA, NOTIFICACION, OBSERVACION, ESTADO_NOTIFICAR, TIPO, MOTIVO_SUPER, FECHA_INICIO, FECHA_FIN, OBSERVACION_GENERAL) 
	VALUES (_ID_OBRA, _NOTIFICACION, _OBSERVACION, _ESTADO_NOTIFICAR, _TIPO, _MOTIVO_SUPER, _FECHA_INICIO, _FECHA_FIN, _OBSERVACION_GENERAL);
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_MOVIMIENTO
(
    IN _ID_MOBRA			INT,
    IN _ID_OBRA				INT,
	IN _NOTIFICACION		CHAR(1),
    IN _OBSERVACION			VARCHAR(80),
    IN _ESTADO_NOTIFICAR	CHAR(1),
    IN _TIPO				CHAR(1),
    IN _MOTIVO_SUPER		VARCHAR(80),
    IN _FECHA_INICIO		DATE,
    IN _FECHA_FIN			DATE,
    IN _OBSERVACION_GENERAL	TEXT
)
BEGIN
	UPDATE MOVIMIENTO_OBRA SET  ID_OBRA = _ID_OBRA,
								NOTIFICACION = _NOTIFICACION,
								OBSERVACION = _OBSERVACION,
								ESTADO_NOTIFICAR = _ESTADO_NOTIFICAR,
								TIPO = _TIPO,
								MOTIVO_SUPER = _MOTIVO_SUPER,
								FECHA_INICIO = _FECHA_INICIO,
								FECHA_FIN = _FECHA_FIN,
								OBSERVACION_GENERAL = _OBSERVACION_GENERAL
	WHERE ID_MOBRA = _ID_MOBRA;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_MOVIMIENTO
(
)
BEGIN
	SELECT MO.ID_MOBRA, O.ID_OBRA,  O.NOMBRE_OBRA, O.FECHA_INICIO, O.FECHA_FIN, O.MONTO_APTO,  TE.DESCRIPCION ,
       MO.NOTIFICACION, MO.OBSERVACION, MO.ESTADO_NOTIFICAR, MO.TIPO, MO.MOTIVO_SUPER, MO.FECHA_INICIO, 
       MO.FECHA_FIN, MO.OBSERVACION_GENERAL, MO.INTEGRANTES 
	FROM MOVIMIENTO_OBRA MO
	INNER JOIN OBRA O ON MO.ID_OBRA = O.ID_OBRA
	INNER JOIN TIPO_EJECUCION TE ON O.ID_TIPO_EJECUCION = TE.ID_TIPO_EJECUCION
	;
END
$$

CALL PROC_LISTAR_MOVIMIENTO();

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_MOVIMIENTO
(
	IN _ID_MOBRA INT
)
BEGIN
	SELECT MO.ID_MOBRA, O.ID_OBRA,  O.NOMBRE_OBRA, O.FECHA_INICIO, O.FECHA_FIN, O.MONTO_APTO,  TE.DESCRIPCION ,
       MO.NOTIFICACION, MO.OBSERVACION, MO.ESTADO_NOTIFICAR, MO.TIPO, MO.MOTIVO_SUPER, MO.FECHA_INICIO, 
       MO.FECHA_FIN, MO.OBSERVACION_GENERAL 
	FROM MOVIMIENTO_OBRA MO
	INNER JOIN OBRA O ON MO.ID_OBRA = O.ID_OBRA
	INNER JOIN TIPO_EJECUCION TE ON O.ID_TIPO_EJECUCION = TE.ID_TIPO_EJECUCION
	WHERE MO.ID_MOBRA =_ID_MOBRA; 
END
$$

CALL PROC_BUSCAR_MOVIMIENTO('1');




# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA ASIGNAR PARTICIPANTES
# **********************************************************************



# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA MOVIMIENTO OBRA
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_PARTICIPANTES
(	
	IN _ID_MOBRA			INT,
	IN _PARTICIPANTE		TEXT,
    IN _N_DNI				CHAR(8)
)
BEGIN
	INSERT INTO ASIGNAR_PARTICIPANTES (ID_MOBRA, PARTICIPANTE, N_DNI) 
	VALUES (_ID_MOBRA, _PARTICIPANTE, _N_DNI);
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_PARTICIPANTES
(
    IN _ID_ASIGNAR			INT,
    IN _ID_MOBRA			INT,
	IN _PARTICIPANTE		TEXT,
    IN _N_DNI				CHAR(8)
)
BEGIN
	UPDATE ASIGNAR_PARTICIPANTES SET  ID_MOBRA = _ID_MOBRA,
									  PARTICIPANTE = _PARTICIPANTE,
									  N_DNI = _N_DNI
	WHERE ID_ASIGNAR = _ID_ASIGNAR;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_PARTICIPANTES
(
)
BEGIN
	SELECT * FROM ASIGNAR_PARTICIPANTES;
END
$$

CALL PROC_LISTAR_PARTICIPANTES();

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_PARTICIPANTES
(
	IN _ID_MOBRA INT
)
BEGIN
	SELECT AP.ID_ASIGNAR, MO.ID_MOBRA, AP.PARTICIPANTE, AP.N_DNI FROM ASIGNAR_PARTICIPANTES AP
    INNER JOIN MOVIMIENTO_OBRA MO ON AP.ID_MOBRA = MO.ID_MOBRA
	WHERE MO.ID_MOBRA = _ID_MOBRA; 
END
$$



# **********************************************************************
# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA MATRIZ
# **********************************************************************




# PROCEDIMIENTOS ALMACENADOS PARA LA TABLA MATRIZ
DELIMITER $$
CREATE PROCEDURE PROC_REGISTRAR_MATRIZ
(	
	IN _ID_OBRA			INT,
	IN _N_RIESGO		CHAR(4), 
	IN _DESCRIPCION		VARCHAR(80),
	IN _ESTRATEGIA		VARCHAR(50),
	IN _ACCIONES		VARCHAR(50),
	IN _ASIGNACION		VARCHAR(50)
)
BEGIN
	INSERT INTO MATRIZ (ID_OBRA, N_RIESGO, DESCRIPCION, ESTRATEGIA, ACCIONES, ASIGNACION) 
	VALUES (_ID_OBRA, _N_RIESGO, _DESCRIPCION, _ESTRATEGIA, _ACCIONES, _ASIGNACION);
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_ACTUALIZAR_MATRIZ
(
    IN _ID_MATRIZ		INT,
    IN _ID_OBRA			INT,
	IN _N_RIESGO		CHAR(4), 
	IN _DESCRIPCION		VARCHAR(80),
	IN _ESTRATEGIA		VARCHAR(50),
	IN _ACCIONES		VARCHAR(50),
	IN _ASIGNACION		VARCHAR(50)
)
BEGIN
	UPDATE MATRIZ SET  ID_OBRA = _ID_OBRA,
					   N_RIESGO = _N_RIESGO,
					   DESCRIPCION = _DESCRIPCION,
					   ESTRATEGIA = _ESTRATEGIA,
					   ACCIONES = _ACCIONES,
					   ASIGNACION = _ASIGNACION
	WHERE ID_MATRIZ = _ID_MATRIZ;
END
$$

DELIMITER $$
CREATE PROCEDURE PROC_LISTAR_MATRIZ
(
)
BEGIN
	SELECT MA.ID_MATRIZ, O.ID_OBRA, O.NOMBRE_OBRA, O.FECHA_INICIO, O.FECHA_FIN, 
		   MA.N_RIESGO, MA.DESCRIPCION, MA.ESTRATEGIA, MA.ACCIONES, MA.ASIGNACION
	FROM MATRIZ MA
    INNER JOIN OBRA O ON MA.ID_OBRA = O.ID_OBRA;
END
$$

CALL PROC_LISTAR_MATRIZ();

DELIMITER $$
CREATE PROCEDURE PROC_BUSCAR_MATRIZ
(
	IN _ID_MATRIZ INT
)
BEGIN
	SELECT MA.ID_MATRIZ, O.ID_OBRA, O.NOMBRE_OBRA, O.FECHA_INICIO, O.FECHA_FIN, 
		   MA.N_RIESGO, MA.DESCRIPCION, MA.ESTRATEGIA, MA.ACCIONES, MA.ASIGNACION
	FROM MATRIZ MA
    INNER JOIN OBRA O ON MA.ID_OBRA = O.ID_OBRA
	WHERE MA.ID_MATRIZ = _ID_MATRIZ; 
END
$$